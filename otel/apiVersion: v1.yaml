apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: observability
  labels:
    app: opentelemetry-collector
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
      # NOWY ODBIORNIK DLA METRYK PROMETHEUSA
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-frr-exporter' # Nazwa joba dla frr-exportera
              static_configs:
                - targets: ['192.168.0.100:9480']
              metrics_path: /metrics # Domyślna ścieżka metryk dla frr-exportera
              scrape_interval: 15s

            - job_name: 'otel-node-exporter' # Nazwa joba dla node-exportera
              static_configs:
                - targets: ['192.168.0.100:9481']
              metrics_path: /metrics # Domyślna ścieżka metryk dla node-exportera
              scrape_interval: 5s

            - job_name: 'blackbox-exporter' # Nazwa joba dla node-exportera
              static_configs:
                - targets: ['192.168.0.100:9115']
              metrics_path: /metrics # Domyślna ścieżka metryk dla node-exportera
              scrape_interval: 5s

      snmp:
        collection_interval: 60s
        devices:
          - target: "192.168.0.100:161"
            version: 2c
            community: "public"
            metrics:
              - name: ifInOctets
                oid: 1.3.6.1.2.1.2.2.1.10
                type: counter
              - name: ifOutOctets
                oid: 1.3.6.1.2.1.2.2.1.16
                type: counter
              # - name: hrSWRunName
              #   oid: 1.3.6.1.2.1.25.4.2.1.2
              #   type: gauge
              # - name: hrSWRunStatus
              #   oid: 1.3.6.1.2.1.25.4.2.1.7
              #   type: gauge
              # - name: hrSWRunPerfCPU
              #   oid: 1.3.6.1.2.1.25.5.1.1.1
              #   type: counter

    processors:
      batch:
        send_batch_size: 100
        timeout: 10s

    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"

      loki:
        endpoint: http://loki:3100/loki/api/v1/push

      otlp:
        endpoint: tempo:4317
        tls:
          insecure: true

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp]
        metrics:
          receivers: [otlp, prometheus, snmp] # <-- Dodaj "prometheus" do odbiorników metryk!
          processors: [batch]
          exporters: [prometheus] # Tutaj Prometheus oznacza Prometheus jako backend docelowy
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [loki]
